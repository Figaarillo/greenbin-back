services:
  # ############ API SERVER ############ #
  apiserver:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - database
    ports:
      - '8080:8080'
    environment:
      DATABASE_HOST: database
    networks:
      - dev-network

  # ############# DATABASE ############# #
  database:
    image: postgres:16.2-alpine3.19
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - '${DATABASE_PORT}:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - dev-network

  # ########### TEST DATABASE ########## #
  database-test:
    image: postgres:16.2-alpine3.19
    restart: always
    environment:
      POSTGRES_USER: ${TEST_DATABASE_USER}
      POSTGRES_PASSWORD: ${TEST_DATABASE_PASS}
      POSTGRES_DB: ${TEST_DATABASE_NAME}
    ports:
      - '${TEST_DATABASE_PORT}:5432'
    volumes:
      - pgdata-test:/var/lib/postgresql/data
    networks:
      - dev-network

volumes:
  pgdata:
    driver: local
  pgdata-test:
    driver: local

networks:
  dev-network:
    driver: bridge
